name: PR-CI-SOT

on:
  workflow_call:

env:
  dockerfile: Dockerfile.cuda9_cudnn7_gcc48_py35_centos6
  docker_image: 077ca344c322
  PR_ID: ${{ github.event.pull_request.number }}
  COMMIT_ID: ${{ github.event.pull_request.head.sha }}
  container_name: paddle-CI-${{ github.event.pull_request.number }}-sot

defaults:
  run:
    shell: bash

jobs:
  build-test:
    runs-on:
      group: GZ_BD-CPU

    steps:
    # sudo usermod -aG docker $USER
    - name: Check docker image and run container
      env:
        FLAGS_fraction_of_gpu_memory_to_use: 0.15
        CTEST_OUTPUT_ON_FAILURE: 1
        CTEST_PARALLEL_LEVEL: 2
        WITH_GPU: "OFF"
        WITH_CACHE: "ON"
        WITH_AVX: "OFF"
        WITH_MKL: "OFF"
        WITH_TESTING: "OFF"
        WITH_COVERAGE: "OFF"
        COVERALLS_UPLOAD: "OFF"
        GIT_PR_ID: ${{ github.event.pull_request.number }}
        PADDLE_VERSION: 0.0.0
        CMAKE_BUILD_TYPE: Release
        PADDLE_FRACTION_GPU_MEMORY_TO_USE: 0.15
        WITH_DISTRIBUTE: "OFF"
        RUN_TEST: OFF
        PRECISION_TEST: "OFF"
        PREC_SUFFIX: .py3
        WITH_UNITY_BUILD: "ON"
        TIMEOUT_DEBUG_HEL: "OFF"
        PY_VERSION: 3.10
        CI_SKIP_CPP_TEST: "OFF"
        PROC_RUN: 12
        FLAGS_enable_eager_mode: 1
        WITH_TENSORRT: "OFF"
        WITH_NEWIR: "ON"
        GENERATOR: Ninja
        WITH_INFERENCE_API_TEST: "OFF"
        CCACHE_MAXSIZE: 150G
        CCACHE_LIMIT_MULTIPLE: 0.8
      run: |
        # bash ${{ github.workspace }}/paddle/scripts/paddle_build/check_docker_image.sh
        docker run -d -t --name ${container_name} \
          -v "/home/data/cfs:/home/data/cfs" \
          -v "/home/data/gzcfs:/home/data/gzcfs" \
          -v "/dev/shm:/dev/shm" \
          -v "${{ github.workspace }}/../../../..:${{ github.workspace }}/../../../.." \
          -e PR_ID \
          -e COMMIT_ID \
          -e FLAGS_fraction_of_gpu_memory_to_use \
          -e CTEST_OUTPUT_ON_FAILURE \
          -e CTEST_PARALLEL_LEVEL \
          -e WITH_GPU \
          -e WITH_CACHE \
          -e WITH_AVX \
          -e WITH_MKL \
          -e WITH_TESTING \
          -e WITH_COVERAGE \
          -e COVERALLS_UPLOAD \
          -e GIT_PR_ID \
          -e PADDLE_VERSION \
          -e CMAKE_BUILD_TYPE \
          -e PADDLE_FRACTION_GPU_MEMORY_TO_USE \
          -e WITH_DISTRIBUTE \
          -e RUN_TEST \
          -e PRECISION_TEST \
          -e PREC_SUFFIX \
          -e WITH_UNITY_BUILD \
          -e TIMEOUT_DEBUG_HEL \
          -e PY_VERSION \
          -e CI_SKIP_CPP_TEST \
          -e PROC_RUN \
          -e FLAGS_enable_eager_mode \
          -e WITH_TENSORRT \
          -e WITH_NEWIR \
          -e GENERATOR \
          -e WITH_INFERENCE_API_TEST \
          -e CCACHE_MAXSIZE \
          -e CCACHE_LIMIT_MULTIPLE \
          -e GITHUB_ENV \
          -w ${{ github.workspace }} --network host ${docker_image}
      # working_directory: ./tools/dockerfile/

    - name: Download paddle and update
      run: |
        docker exec -t ${container_name} /bin/bash -c '
        rm -rf * .[^.]*
        wget -q --no-proxy https://paddle-github-action.bj.bcebos.com/PR/Paddle/${PR_ID}/${COMMIT_ID}/Paddle.tar.gz --no-check-certificate
        tar xf Paddle.tar.gz --strip-components=1
        bash ${{ github.workspace }}/paddle/scripts/paddle_build/config_paddle.sh
        ln -s /home/data/cfs/.cache /root/.cache
        . ../proxy
        git checkout develop
        git pull upstream develop
        git fetch upstream develop
        git checkout test
        git merge develop
        '

    - name: Configure cache and ccache
      run: |
        docker exec -t ${container_name} /bin/bash -c '
        mkdir -p /home/data/cfs/.cache/build
        echo "CACHE_DIR=/home/data/cfs/.cache/build" >> ${{ github.env }}
        if [ -f '/home/data/gzcfs/gz.txt' ];then
          mkdir -p /home/data/gzcfs/.ccache/sot
          echo "CCACHE_DIR=/home/data/gzcfs/.ccache/sot" >> ${{ github.env }}
        else
          mkdir -p /home/data/cfs/.ccache/sot
          echo "CCACHE_DIR=/home/data/cfs/.ccache/sot" >> ${{ github.env }}
        fi
        '

    - name: Check sot
      id: check_sot
      env:
        work_dir: ${{ github.workspace }}
        PADDLE_ROOT: ${{ github.workspace }}
      run: |
        docker exec -t ${container_name} /bin/bash -c '
        export CACHE_DIR=${{ env.CACHE_DIR }}
        export CCACHE_DIR=${{ env.CCACHE_DIR }}
        export work_dir=${{ env.work_dir }}
        export PADDLE_ROOT=${{ env.PADDLE_ROOT }}
        PATH=/usr/local/bin:${PATH}
        ln -sf $(which python3.10) /usr/local/bin/python
        ln -sf $(which pip3.10) /usr/local/bin/pip
        pip config set global.cache-dir "/home/data/cfs/.cache/pip"
        . ../proxy
        EXCODE=0
        bash -x ${work_dir}/paddle/scripts/paddle_build.sh cicheck_sot;EXCODE=$?
        echo "EXCODE=${EXCODE}" >> ${{ github.env }}
        '

    - name: Check result
      env:
        CHECK_SCRIPT: "${{ github.workspace }}/paddle/scripts/paddle_build/check_excode.sh"
      run: |
        docker exec -t ${container_name} /bin/bash -c "export EXCODE=${{ env.EXCODE }} && bash $CHECK_SCRIPT"

    - name: Terminate and delete the container
      if: always()
      run: |
        docker stop ${container_name}
        docker rm ${container_name}
